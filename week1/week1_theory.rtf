{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe1033\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbmajor\f31501\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\fdbminor\f31505\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f321\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\f322\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f324\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f325\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\f326\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f327\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f328\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\f329\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f661\fbidi \froman\fcharset238\fprq2 Cambria Math CE;}
{\f662\fbidi \froman\fcharset204\fprq2 Cambria Math Cyr;}{\f664\fbidi \froman\fcharset161\fprq2 Cambria Math Greek;}{\f665\fbidi \froman\fcharset162\fprq2 Cambria Math Tur;}{\f668\fbidi \froman\fcharset186\fprq2 Cambria Math Baltic;}
{\f669\fbidi \froman\fcharset163\fprq2 Cambria Math (Vietnamese);}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbmajor\f31518\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbmajor\f31519\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbmajor\f31521\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbmajor\f31522\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbmajor\f31523\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbmajor\f31524\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbmajor\f31525\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbmajor\f31526\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}
{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31558\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fdbminor\f31559\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fdbminor\f31561\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}
{\fdbminor\f31562\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fdbminor\f31563\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fdbminor\f31564\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\fdbminor\f31565\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fdbminor\f31566\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}
{\fhiminor\f31573\fbidi \fswiss\fcharset177\fprq2 Calibri (Hebrew);}{\fhiminor\f31574\fbidi \fswiss\fcharset178\fprq2 Calibri (Arabic);}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\*\defchp \fs22\loch\af31506\hich\af31506\dbch\af31505 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 
\ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1033\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 \snext11 \ssemihidden \sunhideused 
Normal Table;}}{\*\rsidtbl \rsid5002891\rsid8416166}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator Admin}{\creatim\yr2018\mo11\dy28\hr22\min2}
{\revtim\yr2018\mo11\dy28\hr22\min2}{\version2}{\edmins0}{\nofpages20}{\nofwords4850}{\nofchars27649}{\nofcharsws32435}{\vern49247}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1440\margr1440\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves0\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale120\rsidroot5002891 \nouicompat \fet0{\*\wgrffmtfilter 2450}\nofeaturethrottle1\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar\ql \li0\ri0\sa200\sl276\slmult1\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 
\fs22\lang1033\langfe1033\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 Multiprogramming \hich\f0 
\endash \loch\f0  A computer running more than one program at a time (like running Excel and Firefox simultaneously).
\par \hich\af0\dbch\af31505\loch\f0 Multiprocessing \hich\f0 \endash \loch\f0  A computer using more than one CPU at a time.
\par \hich\af0\dbch\af31505\loch\f0 Multitasking \hich\f0 \endash \loch\f0  Tasks sharing a common resource (like 1 CPU).
\par \hich\af0\dbch\af31505\loch\f0 Multithreading is an extension of multitasking.
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 1. Multi programming \hich\f0 \endash 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 
\par \hich\af0\dbch\af31505\loch\f0 In a modern computing system, there are usually several concurrent application processes which want to execute. Now it is the responsibility of the Operating System to manage all the processes effectively and efficiently.

\par \hich\af0\dbch\af31505\loch\f0 One of the most important aspects \hich\af0\dbch\af31505\loch\f0 of an Operating System is to multi program.
\par \hich\af0\dbch\af31505\loch\f0 In a computer system, there are multiple processes waiting to be executed, i.e. they are waiting when the CPU will be allocated to them and they begin their execution. These processes are also known as jobs. Now 
\hich\af0\dbch\af31505\loch\f0 
the main memory is too small to accommodate all of these processes or jobs into it. Thus, these processes are initially kept in an area called job pool. This job pool consists of all those processes awaiting allocation of main memory and CPU.
\par \hich\af0\dbch\af31505\loch\f0 CPU selects o\hich\af0\dbch\af31505\loch\f0 
ne job out of all these waiting jobs, brings it from the job pool to main memory and starts executing it. The processor executes one job until it is interrupted by some external factor or it goes for an I/O task.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Non-multi programmed system\hich\f0 \rquote \loch\f0 s working \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 I\hich\af0\dbch\af31505\loch\f0 
n a non multi programmed system, As soon as one job leaves the CPU and goes for some other task (say I/O ), the CPU becomes idle. The CPU keeps waiting and waiting until this job (which was executing earlier) comes back and resumes its execution with the 
\hich\af0\dbch\af31505\loch\f0 C\hich\af0\dbch\af31505\loch\f0 PU. So CPU remains free for all this while.
\par \hich\af0\dbch\af31505\loch\f0 Now it has a drawback that the CPU remains idle for a very long period of time. Also, other jobs which are waiting to be executed might not get a chance to execute because the CPU is still allocated to the earlie
\hich\af0\dbch\af31505\loch\f0 r job.
\par \hich\af0\dbch\af31505\loch\f0 This poses a very serious problem that even though other jobs are ready to execute, CPU is not allocated to them as the CPU is allocated to a job which is not even utilizing it (as it is busy in I/O tasks).
\par \hich\af0\dbch\af31505\loch\f0 It cannot happen that one job is using the\hich\af0\dbch\af31505\loch\f0 
 CPU for say 1 hour while the others have been waiting in the queue for 5 hours. To avoid situations like this and come up with efficient utilization of CPU, the concept of multi programming came up.
\par \hich\af0\dbch\af31505\loch\f0 The main idea of multi programming is to maximize the CP\hich\af0\dbch\af31505\loch\f0 U time.
\par \hich\af0\dbch\af31505\loch\f0 Multi programmed system\hich\f0 \rquote \loch\f0 s working \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 In a multi-programmed system, as soon as one job goes for an I/O task, the Operating System interrupts that job, chooses another job from the job pool (waiting queue), gives CPU to this new job and starts its ex
\hich\af0\dbch\af31505\loch\f0 
ecution. The previous job keeps doing its I/O operation while this new job does CPU bound tasks. Now say the second job also goes for an I/O task, the CPU chooses a third job and starts executing it. As soon as a job completes its I/O operation and comes 
\hich\af0\dbch\af31505\loch\f0 b\hich\af0\dbch\af31505\loch\f0 ack for CPU tasks, the CPU is allocated to it.
\par \hich\af0\dbch\af31505\loch\f0 In this way, no CPU time is wasted by the system waiting for the I/O task to be completed.
\par \hich\af0\dbch\af31505\loch\f0 Therefore, the ultimate goal of multi programming is to keep the CPU busy as long as there are processes ready to exec\hich\af0\dbch\af31505\loch\f0 
ute. This way, multiple programs can be executed on a single processor by executing a part of a program at one time, a part of another program after this, then a part of another program and so on, hence executing multiple programs. Hence, the CPU never re
\hich\af0\dbch\af31505\loch\f0 m\hich\af0\dbch\af31505\loch\f0 ains idle.
\par \hich\af0\dbch\af31505\loch\f0 In the image below, program A runs for some time and then goes to waiting state. In the mean time program B begins its execution. So the CPU does not waste its resources and gives program B an opportunity to run.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 2. Multiprocessing \hich\f0 \endash 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 
\par \hich\af0\dbch\af31505\loch\f0 In a uni-\hich\af0\dbch\af31505\loch\f0 processor system, only one process executes at a time.
\par \hich\af0\dbch\af31505\loch\f0 Multiprocessing is the use of two or more CPUs (processors) within a single Computer system. The term also refers to the ability of a system to support more than one processor within a single computer 
\hich\af0\dbch\af31505\loch\f0 system. Now since there are multiple processors available, multiple processes can be executed at a time. These multi processors share the computer bus, sometimes the clock, memory and peripheral devices also.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Multi processing system\hich\f0 \rquote \loch\f0 s working \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 
With the help of multiprocessing, many processes can be executed simultaneously. Say processes P1, P2, P3 and P4 are waiting for execution. Now in a single processor system, firstly one process will execute, then the other, then the other and so on.

\par \hich\af0\dbch\af31505\loch\f0 But wi\hich\af0\dbch\af31505\loch\f0 
th multiprocessing, each process can be assigned to a different processor for its execution. If its a dual-core processor (2 processors), two processes can be executed simultaneously and thus will be two times faster, similarly a quad core processor will 
\hich\af0\dbch\af31505\loch\f0 b\hich\af0\dbch\af31505\loch\f0 e four times as fast as a single processor.
\par \hich\af0\dbch\af31505\loch\f0 Why use multi processing \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 The main advantage of multiprocessor system is to get more work done in a shorter period of time. These types of systems are used when very high speed is required to process a large vo\hich\af0\dbch\af31505\loch\f0 
lume of data. Multi processing systems can save money in comparison to single processor systems because the processors can share peripherals and power supplies.
\par \hich\af0\dbch\af31505\loch\f0 It also provides increased reliability in the sense that if one processor fails, the work does \hich\af0\dbch\af31505\loch\f0 
not halt, it only slows down. e.g. if we have 10 processors and 1 fails, then the work does not halt, rather the remaining 9 processors can share the work of the 10th processor. Thus the whole system runs only 10 percent slower, rather than failing altoge
\hich\af0\dbch\af31505\loch\f0 t\hich\af0\dbch\af31505\loch\f0 her.
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 
Multiprocessing refers to the hardware (i.e., the CPU units) rather than the software (i.e., running processes). If the underlying hardware provides more than one processor then that is multiprocessing. It is the ability of the system to leverage mu
\hich\af0\dbch\af31505\loch\f0 ltiple processors\hich\f0 \rquote \loch\f0  computing power.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Difference between Multi programming and Multi processing \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 A System can be both multi programmed by having multiple programs running at the same time and multiprocessing by having more than one physical processor. The\hich\af0\dbch\af31505\loch\f0 
 difference between multiprocessing and multi programming is that Multiprocessing is basically executing multiple processes at the same time on multiple processors, whereas multi programming is keeping several programs in main memory and executing them co
\hich\af0\dbch\af31505\loch\f0 n\hich\af0\dbch\af31505\loch\f0 currently using a single CPU only.
\par \hich\af0\dbch\af31505\loch\f0 Multiprocessing occurs by means of parallel processing whereas Multi programming occurs by switching from one process to other (phenomenon called as context switching).
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 3. Multitasking \hich\f0 \endash 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 
\par \hich\af0\dbch\af31505\loch\f0 As the name itself suggests, mult\hich\af0\dbch\af31505\loch\f0 
i tasking refers to execution of multiple tasks (say processes, programs, threads etc.) at a time. In the modern operating systems, we are able to play MP3 music, edit documents in Microsoft Word, surf the Google Chrome all simultaneously, this is accompl
\hich\af0\dbch\af31505\loch\f0 i\hich\af0\dbch\af31505\loch\f0 shed by means of multi tasking.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Multitasking is a logical extension of multi programming. The major way in which multitasking differs from multi programming is that multi programming works solely on the concept of context switching whereas multitasking is
\hich\af0\dbch\af31505\loch\f0  based on time sharing alongside the concept of context switching.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Multi tasking system\hich\f0 \rquote \loch\f0 s working \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 In a time sharing system, each process is assigned some specific quantum of time for which a process is meant to execute. Say there are 4 processes P1, P2\hich\af0\dbch\af31505\loch\f0 
, P3, P4 ready to execute. So each of them are assigned some time quantum for which they will execute e.g time quantum of 5 nanoseconds (5 ns). As one process begins execution (say P2), it executes for that quantum of time (5 ns). After 5 ns the CPU start
\hich\af0\dbch\af31505\loch\f0 s\hich\af0\dbch\af31505\loch\f0  the execution of the other process (say P3) for the specified quantum of time.
\par \hich\af0\dbch\af31505\loch\f0 Thus the CPU makes the processes to share time slices between them and execute accordingly. As soon as time quantum of one process expires, another process begins its execution.
\par \hich\af0\dbch\af31505\loch\f0 
Here also basically a context switch is occurring but it is occurring so fast that the user is able to interact with each program separately while it is running. This way, the user is given the illusion that multiple processes/ tasks are executing simult
\hich\af0\dbch\af31505\loch\f0 aneously. But actually only one process/ task is executing at a particular instant of time. In multitasking, time sharing is best manifested because each running process takes only a fair quantum of the CPU time.
\par \hich\af0\dbch\af31505\loch\f0 
In a more general sense, multitasking refers to having multiple programs, processes, tasks, threads running at the same time. This term is used in modern operating systems when multiple tasks share a common processing resource (e.g., CPU and Memory).

\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 As\hich\af0\dbch\af31505\loch\f0 
 depicted in the above image, At any time the CPU is executing only one task while other tasks are waiting for their turn. The illusion of parallelism is achieved when the CPU is reassigned to another task. i.e all the three tasks A, B and C are appearing
\hich\af0\dbch\af31505\loch\f0  \hich\af0\dbch\af31505\loch\f0 to occur simultaneously because of time sharing.
\par \hich\af0\dbch\af31505\loch\f0 So for multitasking to take place, firstly there should be multiprogramming i.e. presence of multiple programs ready for execution. And secondly the concept of time sharing.
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 4. Multi threading \hich\f0 \endash 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 
\par \hich\af0\dbch\af31505\loch\f0 A thread is\hich\af0\dbch\af31505\loch\f0 \hich\f0 
 a basic unit of CPU utilization. Multi threading is an execution model that allows a single process to have multiple code segments (i.e., threads) running concurrently within the \'93\loch\f0 \hich\f0 context\'94\loch\f0  of that process.
\par \hich\af0\dbch\af31505\loch\f0 e.g. VLC media player, where one thread is used f\hich\af0\dbch\af31505\loch\f0 or opening the VLC media player, one thread for playing a particular song and another thread for adding new songs to the playlist.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Multi threading is the ability of a process to manage its use by more than one user at a time and to manage multiple request\hich\af0\dbch\af31505\loch\f0 
s by the same user without having to have multiple copies of the program.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Multi threading system\hich\f0 \rquote \loch\f0 s working \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Example 1 \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Say there is a web server which processes client requests. Now if it executes as a single threaded process, then it will not be able\hich\af0\dbch\af31505\loch\f0 
 to process multiple requests at a time. Firstly one client will make its request and finish its execution and only then, the server will be able to process another client request. This is really costly, time consuming and tiring task. To avoid this, mult
\hich\af0\dbch\af31505\loch\f0 i\hich\af0\dbch\af31505\loch\f0  threading can be made use of.
\par \hich\af0\dbch\af31505\loch\f0 
Now, whenever a new client request comes in, the web server simply creates a new thread for processing this request and resumes its execution to hear more client requests. So the web server has the task of listening to new cl
\hich\af0\dbch\af31505\loch\f0 ient requests and creating threads for each individual request. Each newly created thread processes one client request, thus reducing the burden on web server.
\par \hich\af0\dbch\af31505\loch\f0 Example 2 \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 We can think of threads as child processes that share the parent process resources \hich\af0\dbch\af31505\loch\f0 
but execute independently. Now take the case of a GUI. Say we are performing a calculation on the GUI (which is taking very long time to finish). Now we can not interact with the rest of the GUI until this command finishes its execution. To be able to int
\hich\af0\dbch\af31505\loch\f0 e\hich\af0\dbch\af31505\loch\f0 
ract with the rest of the GUI, this command of calculation should be assigned to a separate thread. So at this point of time, 2 threads will be executing i.e. one for calculation, and one for the rest of the GUI. Hence here in a single process, we used mu
\hich\af0\dbch\af31505\loch\f0 l\hich\af0\dbch\af31505\loch\f0 tiple threads for multiple functionality.
\par \hich\af0\dbch\af31505\loch\f0 The image below completely describes the VLC player example:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Advantages of Multi threading \hich\f0 \endash 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Benefits of Multi threading include increased responsiveness. Since there are multiple threads in a program, so if one \hich\af0\dbch\af31505\loch\f0 
thread is taking too long to execute or if it gets blocked, the rest of the threads keep executing without any problem. Thus the whole program remains responsive to the user by means of remaining threads.
\par \hich\af0\dbch\af31505\loch\f0 Another advantage of multi threading is that it is \hich\af0\dbch\af31505\loch\f0 
less costly. Creating brand new processes and allocating resources is a time consuming task, but since threads share resources of the parent process, creating threads and switching between them is comparatively easy. Hence multi threading is the need of m
\hich\af0\dbch\af31505\loch\f0 o\hich\af0\dbch\af31505\loch\f0 dern Operating Systems.
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 Idempotent REST APIs. 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 In the context of REST APIs, when making multiple identical requests has the same effect as making a single request \hich\f0 \endash 
\hich\af0\dbch\af31505\loch\f0  then that REST API is called idempotent. ... It essentially means that the result of a successfully performed request is independent of the number of times it is executed.
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 The MEAN Stack
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\insrsid8416166\charrsid5002891 
\par \hich\af0\dbch\af31505\loch\f0 We'll start with MEAN as it's the more established stack but most o\hich\af0\dbch\af31505\loch\f0 f what's covered here is applicable to MERN (swap Angular with React).
\par 
\par \hich\af0\dbch\af31505\loch\f0 MEAN is a set of Open Source components that together, provide an end-to-end framework for building dynamic web applications; starting from the top (code running in the browser) to the\hich\af0\dbch\af31505\loch\f0 
 bottom (database). The stack is made up of:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Angular (formerly Angular.js, now also known as Angular 2): Front-end web app framework; runs your JavaScript code in the user's browser, allowing your application UI to be dynamic
\par \hich\af0\dbch\af31505\loch\f0 Express (sometimes referred t\hich\af0\dbch\af31505\loch\f0 o as Express.js): Back-end web application framework running on top of Node.js
\par \hich\af0\dbch\af31505\loch\f0 Node.js : JavaScript runtime environment \hich\f0 \endash \loch\f0  lets you implement your application back-end in JavaScript
\par \hich\af0\dbch\af31505\loch\f0 MongoDB : Document database \hich\f0 \endash \loch\f0  used by your back-end application to store it\hich\af0\dbch\af31505\loch\f0 s data as JSON (JavaScript Object Notation) documents
\par \hich\af0\dbch\af31505\loch\f0 A common theme in the MEAN stack is JavaScript \hich\f0 \endash \loch\f0 
 every line of code you write can be in the same language. You even access the database using MongoDB's native, Idiomatic JavaScript/Node.js driver. What \hich\af0\dbch\af31505\loch\f0 
do we mean by idiomatic? Using the driver feels natural to a JavaScript developer as all interaction is performed using familiar concepts such as JavaScript objects and asynchronous execution using either callback functions or promises (explained later). 
\hich\af0\dbch\af31505\loch\f0 H\hich\af0\dbch\af31505\loch\f0 ere's an example of inserting an array of 3 JavaScript objects:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Express
\par 
\par \hich\af0\dbch\af31505\loch\f0 Express is the web application framework that runs your back-end application (JavaScript) code. Express runs as a module within the Node.js environment.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Express can handle the routi\hich\af0\dbch\af31505\loch\f0 ng of requests to the right parts of your application (or to different apps running in the same environment).
\par 
\par \hich\af0\dbch\af31505\loch\f0 You can run the app's full business logic within Express and even generate the final HTML to be rendered by the user's browser. At the other extr\hich\af0\dbch\af31505\loch\f0 
eme, Express can be used to simply provide a REST API \hich\f0 \endash \loch\f0  giving the front-end app access to the resources it needs e.g., the database.
\par 
\par \hich\af0\dbch\af31505\loch\f0 In this blog series, we will use Express to perform two functions:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Send the front-end application code to the remote bro\hich\af0\dbch\af31505\loch\f0 wser when the user browses to our app
\par \hich\af0\dbch\af31505\loch\f0 Provide a REST API that the front-end can access using HTTP network calls, in order to access the database
\par \hich\af0\dbch\af31505\loch\f0 Node.js
\par 
\par \hich\af0\dbch\af31505\loch\f0 Node.js is a JavaScript runtime environment that runs your back-end application (via Express).
\par 
\par \hich\af0\dbch\af31505\loch\f0 Node.js is based on Google's V8 JavaScript engine which is used in the Chrome browsers. It also includes a number of modules that provides features essential for implementing web applications \hich\f0 \endash \loch\f0 
 including networking protocols such as HTTP. Third party modu\hich\af0\dbch\af31505\loch\f0 l\hich\af0\dbch\af31505\loch\f0 es, including the MongoDB driver, can be installed, using the npm tool.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Node.js is an asynchronous, event-driven engine where the application makes a request and then continues working on other useful tasks rather than stalling while it waits for a respon\hich\af0\dbch\af31505\loch\f0 
se. On completion of the requested task, the application is informed of the results via a callback. This enables large numbers of operations to be performed in parallel which is essential when scaling applications. MongoDB was also designed to be used asy
\hich\af0\dbch\af31505\loch\f0 n\hich\af0\dbch\af31505\loch\f0 chronously and so it works well with Node.js applications.
\par 
\par \hich\af0\dbch\af31505\loch\f0 MongoDB
\par 
\par \hich\af0\dbch\af31505\loch\f0 MongoDB is an open-source, document database that provides persistence for your application data and is designed with both scalability and developer agility in mind. MongoDB bridges the g\hich\af0\dbch\af31505\loch\f0 
ap between key-value stores, which are fast and scalable, and relational databases, which have rich functionality. Instead of storing data in rows and columns as one would with a relational database, MongoDB stores JSON documents in collections with dynam
\hich\af0\dbch\af31505\loch\f0 i\hich\af0\dbch\af31505\loch\f0 c schemas.
\par 
\par \hich\af0\dbch\af31505\loch\f0 
MongoDB's document data model makes it easy for you to store and combine data of any structure, without giving up sophisticated validation rules, flexible data access, and rich indexing functionality. You can dynamically modify the schema witho
\hich\af0\dbch\af31505\loch\f0 ut downtime \hich\f0 \endash \loch\f0  vital for rapidly evolving applications.
\par 
\par \hich\af0\dbch\af31505\loch\f0 It can be scaled within and across geographically distributed data centers, providing high levels of availability and scalability. As your deployments grow, the database scales easily with no downtime
\hich\af0\dbch\af31505\loch\f0 , and without changing your application.
\par 
\par \hich\af0\dbch\af31505\loch\f0 MongoDB Atlas is a database as a service for MongoDB, letting you focus on apps instead of ops. With MongoDB Atlas, you only pay for what you use with a convenient hourly billing model. With the click of a button, 
\hich\af0\dbch\af31505\loch\f0 you can scale up and down when you need to, with no downtime, full security, and high performance.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Our application will access MongoDB via the JavaScript/Node.js driver which we install as a Node.js module.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 A content delivery network 
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 or content distribu\hich\af0\dbch\af31505\loch\f0 
tion network (CDN) is a geographically distributed network of proxy servers and their data centers. The goal is to distribute service spatially relative to end-users to provide high availability and high performance. CDNs serve a large portion of the Inte
\hich\af0\dbch\af31505\loch\f0 r\hich\af0\dbch\af31505\loch\f0 
net content today, including web objects (text, graphics and scripts), downloadable objects (media files, software, documents), applications (e-commerce, portals), live streaming media, on-demand streaming media, and social media sites.
\par 
\par \hich\af0\dbch\af31505\loch\f0 CDNs are a layer i\hich\af0\dbch\af31505\loch\f0 
n the internet ecosystem. Content owners such as media companies and e-commerce vendors pay CDN operators to deliver their content to their end users. In turn, a CDN pays ISPs, carriers, and network operators for hosting its servers in their data centers.

\par 
\par \hich\af0\dbch\af31505\loch\f0 
CDN is an umbrella term spanning different types of content delivery services: video streaming, software downloads, web and mobile content acceleration, licensed/managed CDN, transparent caching, and services to measure CDN performance, load balancing, mu
\hich\af0\dbch\af31505\loch\f0 lti-CDN switching and analytics and cloud intelligence. CDN vendors may cross over into other industries like security, with DDoS protection and web application firewalls (WAF), and WAN optimization.
\par 
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 Compilers have a couple of advantages:
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\insrsid8416166\charrsid5002891 
\par \hich\af0\dbch\af31505\loch\f0 Translation into machine language is done by the developers. The end user need no interpreter.
\par \hich\af0\dbch\af31505\loch\f0 Also, the end user will not hace your source code which may be important for commercial code.
\par \hich\af0\dbch\af31505\loch\f0 Since compilation is a one-timer, compilers usually put more effort\hich\af0\dbch\af31505\loch\f0  into optimizations and thus executes faster even after translation.
\par \hich\af0\dbch\af31505\loch\f0 Interpreters translates only the part of th eprogram it is currently executing, whereas compilers translate the entire program. Thanks to this compilers can perfrm global optimizations th\hich\af0\dbch\af31505\loch\f0 
at interpreteers cannot.
\par \hich\af0\dbch\af31505\loch\f0 Compilers can find many inconsistencies in the program compile-time, e.g. type errors. An interpreted program will encounter such bugs run-time, thus more bugs are delivered to the customer in an interpreted toolset.
\par \hich\af0\dbch\af31505\loch\f0 Interpreters h\hich\af0\dbch\af31505\loch\f0 ave a few advantages as well
\par 
\par \hich\af0\dbch\af31505\loch\f0 Source code is multi-platform. Compiled code is processor-specific.
\par \hich\af0\dbch\af31505\loch\f0 It is usually easier to develop and debug in an interpreted environment. You can execute any method in the IDE to try it out (yes you accomplish almost thie s\hich\af0\dbch\af31505\loch\f0 
ame with unit-tests but you still have the write - build- execute - read logs cycle which takes longer).
\par \hich\af0\dbch\af31505\loch\f0 You have all source code down to the runtime library. It is more difficult to hide a virus there.
\par \hich\af0\dbch\af31505\loch\f0 Technically the interpreter could adapt the generated\hich\af0\dbch\af31505\loch\f0  machine code to the target system, e.g. how much memory is available at the moment.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 Synchronous vs. Asynchronous Execution
\par }{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 The difference between synchronous and asynchronous execution may seem a bit confusing at first. Program execution in most high-l\hich\af0\dbch\af31505\loch\f0 
evel languages is usually very straightforward. Your program starts at the first line of source code and each line of code executed sequentially thereafter. Easy enough.
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 Synchronous program execution is somewhat similar to the above. Your program is exec\hich\af0\dbch\af31505\loch\f0 
uted line by line, one line at a time. Each time a function is called, program execution waits until that function returns before continuing to the next line of code.
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 This method of execution can have undesirable ramifications. Suppose a function is call\hich\af0\dbch\af31505\loch\f0 \hich\f0 
ed to start a time consuming process. What if you want to stop the lengthy process? With synchronous execution, your program is \'93\loch\f0 \hich\f0 stuck,\'94\loch\f0  waiting for the process to end, with no way out.
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 Asynchronous execution avoids this bottleneck. You are essentially s\hich\af0\dbch\af31505\loch\f0 \hich\f0 aying, \'93\loch\f0 I know this function call is going to take a great deal of time, but my program doesn\hich\f0 
\rquote \loch\f0 \hich\f0 t want to wait around while it executes.\'94
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 // Exposure time in seconds
\par \hich\af0\dbch\af31505\loch\f0 TakePicture(long lExposureTime)
\par \hich\af0\dbch\af31505\loch\f0 Begin
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0  Do
\par \hich\af0\dbch\af31505\loch\f0 stuff to take a picture...
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 While (notCancelledByUser)
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 if (notCancelledByUser == TRUE)
\par \hich\af0\dbch\af31505\loch\f0 return NoError; 
\par \hich\af0\dbch\af31505\loch\f0 else
\par \hich\af0\dbch\af31505\loch\f0 return Error;
\par \hich\af0\dbch\af31505\loch\f0 End
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 Main
\par \hich\af0\dbch\af31505\loch\f0 Begin
\par \hich\af0\dbch\af31505\loch\f0  TakePicture(120); 
\par \hich\af0\dbch\af31505\loch\f0 \hich\f0  Print(\'93\loch\f0 \hich\f0 TakePicture() function returns!\'94\loch\f0 )
\par \hich\af0\dbch\af31505\loch\f0 End
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 In the above pseudo-code, using synchronous execution, you\hich\f0 \rquote \loch\f0 ll have to wait\hich\af0\dbch\af31505\loch\f0 \hich\f0  two minutes for the call to TakePicture() return and display the \'93\loch\f0 
\hich\f0 TakePicture() function returns!\'94\loch\f0  message. There is no way to cancel the picture.
\par \hich\af0\dbch\af31505\loch\f0  
\par \hich\af0\dbch\af31505\loch\f0 Using asynchronous execution, the TakePicture() function returns immediately and shows the message. Althou\hich\af0\dbch\af31505\loch\f0 
gh the two-minute process is not complete, your program can continue to execute. In this manner, your program could set the notCancelledByUser variable to FALSE to cancel the picture. It can also poll or ask the TakePicture() function when the exposure is
\hich\af0\dbch\af31505\loch\f0  \hich\af0\dbch\af31505\loch\f0 completed, or if an error occurred during the process.
\par 
\par }{\rtlch\fcs1 \ab\af0\afs24 \ltrch\fcs0 \b\f0\fs24\insrsid8416166\charrsid5002891 \hich\af0\dbch\af31505\loch\f0 libuv 
\par \hich\af0\dbch\af31505\loch\f0 (Unicorn Velociraptor Library) is a multi-platform C library that provides support for asynchronous I/O based on event loops. It supports epoll(4) , kqueue(2) , Windows IOCP, and Solaris event \hich\af0\dbch\af31505\loch\f0 
ports. It is primarily designed for use in Node.js but it is also used by other software projects.
\par 
\par \hich\af0\dbch\af31505\loch\f0 A V8 engine
\par \hich\af0\dbch\af31505\loch\f0  is an eight-cylinder V configuration engine with the cylinders mounted on the crankcase in two sets (or banks) of four, with all eight pistons \hich\af0\dbch\af31505\loch\f0 \hich\f0 
driving a common crankshaft. Most banks are set at a right angle (90\'b0\loch\f0 \hich\f0 ) to each other, some at a narrower angle, with 45\'b0\loch\f0 \hich\f0 , 60\'b0\loch\f0 \hich\f0 , and 72\'b0\loch\f0  most common.
\par \hich\af0\dbch\af31505\loch\f0 Types of Operating Systems: Some of the widely used operating systems are as follows-
\par 
\par \hich\af0\dbch\af31505\loch\f0 1. Batch Operating Sy\hich\af0\dbch\af31505\loch\f0 stem \hich\f0 \endash 
\par \hich\af0\dbch\af31505\loch\f0 
This type of operating system do not interact with the computer directly. There is an operator which takes similar jobs having same requirement and group them into batches. It is the responsibility of operator to sort the jobs with similar needs.
\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0  
\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Advantages of Batch Operating System:
\par 
\par \hich\af0\dbch\af31505\loch\f0 It is very difficult to guess or know the time required by any job to complete. Processors of the batch systems knows how long the job would be when it is in queue
\par \hich\af0\dbch\af31505\loch\f0 Multiple users can share the batch systems
\par \hich\af0\dbch\af31505\loch\f0 The \hich\af0\dbch\af31505\loch\f0 idle time batch system is very less
\par \hich\af0\dbch\af31505\loch\f0 It is easy to manage large work repeatedly in batch systems
\par \hich\af0\dbch\af31505\loch\f0 Disadvantages of Batch Operating System:
\par 
\par \hich\af0\dbch\af31505\loch\f0 The computer operators should be well known with batch systems
\par \hich\af0\dbch\af31505\loch\f0 Batch systems are hard to debug
\par \hich\af0\dbch\af31505\loch\f0 It is sometime costly
\par \hich\af0\dbch\af31505\loch\f0 T\hich\af0\dbch\af31505\loch\f0 he other jobs will have to wait for an unknown time if any job fails
\par \hich\af0\dbch\af31505\loch\f0 Examples of Batch based Operating System: Payroll System, Bank Statements etc.
\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0  
\par 
\par \hich\af0\dbch\af31505\loch\f0 2. Time-Sharing Operating Systems \hich\f0 \endash 
\par \hich\af0\dbch\af31505\loch\f0 Each task has given some time to execute, so that all the tasks wo\hich\af0\dbch\af31505\loch\f0 
rk smoothly. Each user gets time of CPU as they use single system. These systems are also known as Multitasking Systems. The task can be from single user or from different users also. The time that each task gets to execute is called quantum. After this t
\hich\af0\dbch\af31505\loch\f0 i\hich\af0\dbch\af31505\loch\f0 me interval is over OS switches over to next task.
\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Advantages of Time-Sharing OS:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Each task gets an equal opportunity
\par \hich\af0\dbch\af31505\loch\f0 Less chances of duplication of software
\par \hich\af0\dbch\af31505\loch\f0 CPU idle time can be reduced
\par \hich\af0\dbch\af31505\loch\f0 Disadvantages of Time-Sharing OS:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Reliability problem
\par \hich\af0\dbch\af31505\loch\f0 One must have to take care of security and integrity of user programs and data
\par \hich\af0\dbch\af31505\loch\f0 Data communication problem
\par \hich\af0\dbch\af31505\loch\f0 Examples of Time-Sharing OSs are: Multics, Unix etc.
\par 
\par \hich\af0\dbch\af31505\loch\f0 3. Distributed Operating System \hich\f0 \endash 
\par \hich\af0\dbch\af31505\loch\f0 These types of operating system is a recent advancement in the\hich\af0\dbch\af31505\loch\f0 
 world of computer technology and are being widely accepted all-over the world and, that too, with a great pace. Various autonomous interconnected computers communicate each other using a shared communication network. Independent systems possess their own
\hich\af0\dbch\af31505\loch\f0  \hich\af0\dbch\af31505\loch\f0 
memory unit and CPU. These are referred as loosely coupled systems or distributed systems. These systems processors differ in sizes and functions. The major benefit of working with these types of operating system is that it is always possible that one use
\hich\af0\dbch\af31505\loch\f0 r\hich\af0\dbch\af31505\loch\f0 
 can access the files or software which are not actually present on his system but on some other system connected within this network i.e., remote access is enabled within the devices connected in that network.
\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Advantages of Distributed Operating System\hich\af0\dbch\af31505\loch\f0 :
\par 
\par \hich\af0\dbch\af31505\loch\f0 Failure of one will not affect the other network communication, as all systems are independent from each other
\par \hich\af0\dbch\af31505\loch\f0 Electronic mail increases the data exchange speed
\par \hich\af0\dbch\af31505\loch\f0 Since resources are being shared, computation is highly fast and durable
\par \hich\af0\dbch\af31505\loch\f0 Load on host comput\hich\af0\dbch\af31505\loch\f0 er reduces
\par \hich\af0\dbch\af31505\loch\f0 These systems are easily scalable as many systems can be easily added to the network
\par \hich\af0\dbch\af31505\loch\f0 Delay in data processing reduces
\par \hich\af0\dbch\af31505\loch\f0 Disadvantages of Distributed Operating System:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Failure of the main network will stop the entire communication
\par \hich\af0\dbch\af31505\loch\f0 To establish distributed systems the language which are used are not well defined yet
\par \hich\af0\dbch\af31505\loch\f0 These types of systems are not readily available as they are very expensive. Not only that the underlying software is highly complex and not understood well yet
\par \hich\af0\dbch\af31505\loch\f0 Examples \hich\af0\dbch\af31505\loch\f0 of Distributed Operating System are- LOCUS etc.
\par 
\par \hich\af0\dbch\af31505\loch\f0 4. Network Operating System \hich\f0 \endash 
\par \hich\af0\dbch\af31505\loch\f0 These systems runs on a server and provides the capability to manage data, users, groups, security, applications, and other networking functions. These type of operating systems\hich\af0\dbch\af31505\loch\f0 
 allows shared access of files, printers, security, applications, and other networking functions over a small private network. One more important aspect of Network Operating Systems is that all the users are well aware of the underlying configuration, of 
\hich\af0\dbch\af31505\loch\f0 a\hich\af0\dbch\af31505\loch\f0 ll other users within the network, their individual connections etc. and that\hich\f0 \rquote \loch\f0 s why these computers are popularly known as tightly coupled systems.
\par 
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Advantages of Network Operating System:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Highly stable centralized servers
\par \hich\af0\dbch\af31505\loch\f0 Security concerns are handled \hich\af0\dbch\af31505\loch\f0 through servers
\par \hich\af0\dbch\af31505\loch\f0 New technologies and hardware up-gradation are easily integrated to the system
\par \hich\af0\dbch\af31505\loch\f0 Server access are possible remotely from different locations and types of systems
\par \hich\af0\dbch\af31505\loch\f0 Disadvantages of Network Operating System:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Servers are costly
\par \hich\af0\dbch\af31505\loch\f0 User has to depe\hich\af0\dbch\af31505\loch\f0 nd on central location for most operations
\par \hich\af0\dbch\af31505\loch\f0 Maintenance and updates are required regularly
\par \hich\af0\dbch\af31505\loch\f0 Examples of Network Operating System are: Microsoft Windows Server 2003, Microsoft Windows Server 2008, UNIX, Linux, Mac OS X, Novell NetWare, and BSD etc.
\par 
\par \hich\af0\dbch\af31505\loch\f0 5. Real-T\hich\af0\dbch\af31505\loch\f0 ime Operating System \hich\f0 \endash 
\par \hich\af0\dbch\af31505\loch\f0 These types of OSs serves the real-time systems. The time interval required to process and respond to inputs is very small. This time interval is called response time.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Real-time systems are used when there are time requirements are \hich\af0\dbch\af31505\loch\f0 very strict like missile systems, air traffic control systems, robots etc.
\par 
\par \hich\af0\dbch\af31505\loch\f0 Two types of Real-Time Operating System which are as follows:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Hard Real-Time Systems:
\par \hich\af0\dbch\af31505\loch\f0 
These OSs are meant for the applications where time constraints are very strict and even the shortest possible delay is not acceptable. These systems are built for saving life like automatic parachutes or air bags which are required to be readily availabl
\hich\af0\dbch\af31505\loch\f0 e\hich\af0\dbch\af31505\loch\f0  in case of any accident. Virtual memory is almost never found in these systems.
\par \hich\af0\dbch\af31505\loch\f0 Soft Real-Time Systems:
\par \hich\af0\dbch\af31505\loch\f0 These OSs are for applications where for time-constraint is less strict.
\par 
\par 
\par \hich\af0\dbch\af31505\loch\f0 Advantages of RTOS:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Maximum Consumption: Maximum utilization of devices and\hich\af0\dbch\af31505\loch\f0  system,thus more output from all the resources
\par \hich\af0\dbch\af31505\loch\f0 Task Shifting: Time assigned for shifting tasks in these systems are very less. For example in older systems it takes about 10 micro seconds in shifting one task to another and in latest systems it takes 3 mi
\hich\af0\dbch\af31505\loch\f0 cro seconds.
\par \hich\af0\dbch\af31505\loch\f0 Focus on Application: Focus on running applications and less importance to applications which are in queue.
\par \hich\af0\dbch\af31505\loch\f0 Real time operating system in embedded system: Since size of programs are small, RTOS can also be used in embedded systems like in tran\hich\af0\dbch\af31505\loch\f0 sport and others.
\par \hich\af0\dbch\af31505\loch\f0 Error Free: These types of systems are error free.
\par \hich\af0\dbch\af31505\loch\f0 Memory Allocation: Memory allocation is best managed in these type of systems.
\par \hich\af0\dbch\af31505\loch\f0 Disadvantages of RTOS:
\par 
\par \hich\af0\dbch\af31505\loch\f0 Limited Tasks: Very few task run at the same time and their concentration is very le\hich\af0\dbch\af31505\loch\f0 ss on few applications to avoid errors.
\par \hich\af0\dbch\af31505\loch\f0 Use heavy system resources: Sometimes the system resources are not so good and they are expensive as well.
\par \hich\af0\dbch\af31505\loch\f0 Complex Algorithms: The algorithms are very complex and difficult for the designer to write on.
\par \hich\af0\dbch\af31505\loch\f0 Device driver\hich\af0\dbch\af31505\loch\f0  and interrupt signals: It needs specific device drivers and interrupt signals to response earliest to interrupts.
\par \hich\af0\dbch\af31505\loch\f0 Thread Priority: It is not good to set thread priority as these systems are very less pron to switching tasks.
\par \hich\af0\dbch\af31505\loch\f0 Examples of Real-Time Operatin\hich\af0\dbch\af31505\loch\f0 g Systems are: Scientific experiments, medical imaging systems, industrial control systems, weapon systems, robots, air traffic control systems, etc.
\par 
\par \hich\af0\dbch\af31505\loch\f0 here are seven types of web browsers:
\par 
\par \hich\af0\dbch\af31505\loch\f0 \hich\f0 
1. Chrome: The most popular cross-platform browser. It is fast with a single tab open, but slows down and crashes with multiple tabs open. It does not remember the contents of form fields, so if you submit a form, and something goes wrong and you hit \'93
\loch\f0 Bac\hich\af0\dbch\af31505\loch\f0 k\loch\af0\dbch\af31505\hich\f0 \'94\loch\f0 , the contents of your form fields are empty. Don\hich\f0 \rquote \loch\f0 t count on Chrome for long paragraphs of text unless you\hich\f0 \rquote \loch\f0 
ve kept a back-up copy by composing offline or using an extension to remember them. It\hich\f0 \rquote \loch\f0 s standards compliance is good. It originates with open-sour\hich\af0\dbch\af31505\loch\f0 c\hich\af0\dbch\af31505\loch\f0 
e Chromium, but is hijacked by Google corporation, and thus the Google version is proprietary, and thus (like all proprietary software) may contain malware in service to corporate agendas.
\par 
\par \hich\af0\dbch\af31505\loch\f0 2. Firefox: The best browser for standards compliance and stabilit\hich\af0\dbch\af31505\loch\f0 
y with many tabs open. It is also the most trustworthy, as it is the only major browser that fully supports democratic transparent open-source values. Its weakness is that it doesn\hich\f0 \rquote \loch\f0 
t yet work well on Android devices, though it does have versions for iPhon\hich\af0\dbch\af31505\loch\f0 e\hich\af0\dbch\af31505\loch\f0 
s and iPads; as well as Windows, Mac, and Linux desktop and laptop computers. (The iOS version of Firefox is really only Safari wrapped in a different package, so you might as well use Safari.)
\par 
\par \hich\af0\dbch\af31505\loch\f0 3. Internet Explorer: The browser that, for many years, came \hich\af0\dbch\af31505\loch\f0 
preinstalled on Windows computers. This is the only reason it once had significant market share. Its standards compliance is notoriously bad, which is why Microsoft eventually replaced it with Edge. Like the other proprietary browsers (all but Firefox), i
\hich\af0\dbch\af31505\loch\f0 t\hich\af0\dbch\af31505\loch\f0 
 is subject to hidden code, and thus may contain malware which serves corporate agendas more than end users. Works only on Windows. No cross-platform versions are available. Versions 8 through 11 are still in widespread use.
\par 
\par \hich\af0\dbch\af31505\loch\f0 4. Safari: The best proprietar\hich\af0\dbch\af31505\loch\f0 y web browser, but works only on Apple computers and devices. It\hich\f0 \rquote \loch\f0 
s standards compliance and stability is very good, but not as good as Firefox. It is slightly more trustworthy, though still somewhat subject to the weaknesses of proprietary software titles.
\par 
\par \hich\af0\dbch\af31505\loch\f0 5. Edge: Microsoft\hich\f0 \rquote \loch\f0 
s replacement for Internet Explorer. It is intended to be more standards compliant, but insiders tend to think it is disappointing, and still a poor substitute for Chrome and Firefox. Works only on Windows 10. Currently has small marke
\hich\af0\dbch\af31505\loch\f0 t share, but is expected to become a major browser as more people upgrade to Windows 10.
\par 
\par \hich\af0\dbch\af31505\loch\f0 6. Android: The unnamed browser that comes preinstalled on Android devices. Works only on Android devices. Standards compliance and stability are good. It appears to \hich\af0\dbch\af31505\loch\f0 \hich\f0 
be a repackaged version of Chrome, so you might as well use Chrome. Android browser uses up more screen \'93\loch\f0 \hich\f0 real estate\'94\loch\f0  than Chrome. That is its only apparent weakness.
\par 
\par \hich\af0\dbch\af31505\loch\f0 7. Minor Browsers: There are a variety of minor browsers, meaning that they have insigni\hich\af0\dbch\af31505\loch\f0 
ficant market share. Users are ill-advised to adopt them because insignificant market share means web developers do not test their websites with them. Therefore using one means entering a no-mans-land of unproven compatibility. I don\hich\f0 \rquote 
\loch\f0 t advise it.
\par 
\par \hich\af0\dbch\af31505\loch\f0 The brow\hich\af0\dbch\af31505\loch\f0 
sers numbered 1 through 6 in the list above are major browsers. Web developers tend to test with these six because they have significant market share. Therefore they are more reliable with a broader range of websites.
\par \hich\af0\dbch\af31505\loch\f0 ____
\par 
\par \hich\af0\dbch\af31505\loch\f0 India is anomalous in that UC Br\hich\af0\dbch\af31505\loch\f0 owser is a major player there, thoug}{\rtlch\fcs1 \af0\afs24 \ltrch\fcs0 \f0\fs24\lang9\langfe1033\langnp9\insrsid8416166\charrsid5002891 
\par }{\*\themedata 504b030414000600080000002100e9de0fbfff0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb4ec3301045f748fc83e52d4a
9cb2400825e982c78ec7a27cc0c8992416c9d8b2a755fbf74cd25442a820166c2cd933f79e3be372bd1f07b5c3989ca74aaff2422b24eb1b475da5df374fd9ad
5689811a183c61a50f98f4babebc2837878049899a52a57be670674cb23d8e90721f90a4d2fa3802cb35762680fd800ecd7551dc18eb899138e3c943d7e503b6
b01d583deee5f99824e290b4ba3f364eac4a430883b3c092d4eca8f946c916422ecab927f52ea42b89a1cd59c254f919b0e85e6535d135a8de20f20b8c12c3b0
0c895fcf6720192de6bf3b9e89ecdbd6596cbcdd8eb28e7c365ecc4ec1ff1460f53fe813d3cc7f5b7f020000ffff0300504b030414000600080000002100a5d6
a7e7c0000000360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4f
c7060abb0884a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b6309512
0f88d94fbc52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462
a1a82fe353bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f746865
6d652f7468656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b
4b0d592c9c070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b
4757e8d3f729e245eb2b260a0238fd010000ffff0300504b03041400060008000000210030dd4329a8060000a41b0000160000007468656d652f7468656d652f
7468656d65312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87
615b8116d8a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad
79482a9c0498f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b
5d8a314d3c94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab
999fb7b4717509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9
699640f6719e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd586
8b37a088d1e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d6
0cf03ac1a5193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f
9e7ef3f2d117d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be
15c308d3f28acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a9979
3849c26ae66252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d
32a423279a668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2a
f074481847bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86
e877f0034e16bafb0e258ebb4faf06b769e888340b103d331115bebc4eb813bf83291b63624a0d1475a756c734f9bbc2cd28546ecbe1e20a3794ca175f3fae90
fb6d2dd99bb07b55e5ccf68942bd0877b23c77b908e8db5f9db7f024d9239010f35bd4bbe2fcae387bfff9e2bc289f2fbe24cfaa301468dd8bd846dbb4ddf1c2
ae7b4c191ba8292337a469bc25ec3d411f06f53a73e224c5292c8de0516732307070a1c0660d125c7d44553488700a4d7bddd3444299910e254ab984c3a219ae
a4adf1d0f82b7bd46cea4388ad1c12ab5d1ed8e1153d9c9f350a3246aad01c6873462b9ac05999ad5cc988826eafc3acae853a33b7ba11cd1445875ba1b236b1
399483c90bd560b0b0263435085a21b0f22a9cf9356b38ec6046026d77eba3dc2dc60b17e92219e180643ed27acffba86e9c94c7ca9c225a0f1b0cfae0788ad5
4adc5a9aec1b703b8b93caec1a0bd8e5de7b132fe5113cf312503b998e2c2927274bd051db6b35979b1ef271daf6c6704e86c73805af4bdd476216c26593af84
0dfb5393d964f9cc9bad5c313709ea70f561ed3ea7b053075221d51696910d0d339585004b34272bff7213cc7a510a5454a3b349b1b206c1f0af490176745d4b
c663e2abb2b34b23da76f6352ba57ca2881844c1111ab189d8c7e07e1daaa04f40255c77988aa05fe06e4e5bdb4cb9c5394bbaf28d98c1d971ccd20867e556a7
689ec9166e0a522183792b8907ba55ca6e943bbf2a26e52f48957218ffcf54d1fb09dc3eac04da033e5c0d0b8c74a6b43d2e54c4a10aa511f5fb021a07533b20
5ae07e17a621a8e082dafc17e450ffb739676998b48643a4daa7211214f623150942f6a02c99e83b85583ddbbb2c4996113211551257a656ec1139246ca86be0
aadedb3d1441a89b6a929501833b197fee7b9641a3503739e57c732a59b1f7da1cf8a73b1f9bcca0945b874d4393dbbf10b1680f66bbaa5d6f96e77b6f59113d
316bb31a795600b3d256d0cad2fe354538e7566b2bd69cc6cbcd5c38f0e2bcc63058344429dc2121fd07f63f2a7c66bf76e80d75c8f7a1b622f878a18941d840
545fb28d07d205d20e8ea071b283369834296bdaac75d256cb37eb0bee740bbe278cad253b8bbfcf69eca23973d939b97891c6ce2cecd8da8e2d343578f6648a
c2d0383fc818c798cf64e52f597c740f1cbd05df0c264c49134cf09d4a60e8a107260f20f92d47b374e32f000000ffff0300504b030414000600080000002100
0dd1909fb60000001b010000270000007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f7
8277086f6fd3ba109126dd88d0add40384e4350d363f2451eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89
d93b64b060828e6f37ed1567914b284d262452282e3198720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd500
1996509affb3fd381a89672f1f165dfe514173d9850528a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100e9de0f
bfff0000001c0200001300000000000000000000000000000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6
a7e7c0000000360100000b00000000000000000000000000300100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a
0000001c00000000000000000000000000190200007468656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d00140006000800000021
0030dd4329a8060000a41b00001600000000000000000000000000d60200007468656d652f7468656d652f7468656d65312e786d6c504b01022d001400060008
00000021000dd1909fb60000001b0100002700000000000000000000000000b20900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000ad0a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;
\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;
\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdpriority1 \lsdlocked0 Default Paragraph Font;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e362e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffff0c6ad98892f1d411a65f0040963251e50000000000000000000000007063
b6033887d401feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}